apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
  compileSdkVersion rootProject.ext.compileSdkVersion

  defaultConfig {
    minSdkVersion rootProject.ext.minSdkVersion
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  lintOptions {
    disable 'InvalidPackage'
    abortOnError true
  }
  sourceSets {
    test.java.srcDirs += 'src/test/kotlin'
  }
}

ext {
  libraryVersion = rootProject.ext.libraryVersion
  libraryVersionName = rootProject.ext.libraryVersionName
  bintrayRepo = rootProject.ext.bintrayRepo
  bintrayName = 'RxFirestore'
  publishedGroupId = rootProject.ext.publishedGroupId
  libraryName = 'RxFirestore'
  // This artifact name should be the same with library module name
  artifact = 'rxfirestore'
  aarName = 'rxfirestore-release.aar'
  libraryDescription = rootProject.ext.libraryDescription
  siteUrl = rootProject.ext.siteUrl
  gitUrl = rootProject.ext.gitUrl
  developerId = rootProject.ext.developerId
  developerName = rootProject.ext.developerName
  developerEmail = rootProject.ext.developerEmail
  organization = rootProject.ext.organization
  licenseName = rootProject.ext.licenseName
  licenseUrl = rootProject.ext.licenseUrl
  allLicenses = rootProject.ext.allLicenses
}

apply from: '../install.gradle'
apply from: '../bintray.gradle'

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
  implementation "com.google.firebase:firebase-firestore:$firebaseVersion"
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
  implementation "com.android.support:support-annotations:$supportLibraryVersion"
  // Testing
  testImplementation "junit:junit:$junitVersion"
  testImplementation "com.nhaarman:mockito-kotlin:$kotlinMockitoVersion"
  testImplementation "org.mockito:mockito-core:${mockitoVersion}"
}
repositories {
  mavenCentral()
}
